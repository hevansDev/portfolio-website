name: Post to socials

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['Deploy Site']
    types: [completed]

jobs:
  social_post:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4.2.2

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v45.0.3
      # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
      # with:
      #   since_last_remote_commit: true
      with:
        files: |
          _posts/**

    - name: Post all new posts
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        ALL_NEW_POSTS: ${{ steps.changed-files.outputs.added_files }}
      run: |
        
        for file in ${ALL_NEW_POSTS}; do
          # Get new post URLs from diff
          blog_url="https://hughevans.dev/$blog/${file:18:-3}"
          echo $blog_url

          # Post to Mastodon
          curl -X POST -d "{\"status\":\"$blog_url\", \
          \"media_ids\":null,\"poll\":null}" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{secrets.MASTODON_USER_TOKEN}}" \
          "https://hachyderm.io/api/v1/statuses"

          # Post to Bluesky
          export APP_PASSWORD='${{secrets.BLUESKY_APP_PASSWORD}}'

          HANDLE='hevansdev.bsky.social'
          DID_URL="https://bsky.social/xrpc/com.atproto.identity.resolveHandle"
          export DID=$(curl -G \
              --data-urlencode "handle=$HANDLE" \
              "$DID_URL" | jq -r .did)

          # Get API key with the app password
          API_KEY_URL='https://bsky.social/xrpc/com.atproto.server.createSession'
          POST_DATA="{ \"identifier\": \"${DID}\", \"password\": \"${APP_PASSWORD}\" }"
          export API_KEY=$(curl -X POST \
              -H 'Content-Type: application/json' \
              -d "$POST_DATA" \
              "$API_KEY_URL" | jq -r .accessJwt)

          # Get page og image
          og_img_url=$(curl -L $blog_url | grep 'og.image' | grep -oE "(http|https)://[a-zA-Z0-9./?=_%:-]*")
          curl -O $og_img_url

          # Get page title
          page_tile=$($(curl $blog_url | xmllint -html -xpath '//head/title/text()' -))

          # Upload embed image blob
          blob=$(curl -X POST \
              -H "Authorization: Bearer ${API_KEY}" \
              -H 'Content-Type: image/jpeg' \
              --data-binary @$(ls *.jpg) \
              "https://bsky.social/xrpc/com.atproto.repo.uploadBlob")


          blob_size=$(echo $blob | jq  '.blob.size')

          blob_link=$(echo $blob | jq  '.blob.ref."$link"')

          # Site embed
          POST_FEED_URL='https://bsky.social/xrpc/com.atproto.repo.createRecord'
          POST_RECORD="{ \"collection\": \"app.bsky.feed.post\",
          \"repo\": \"${DID}\",
          \"record\": {
          \"text\": \"\",
          \"\$type\": \"app.bsky.feed.post\",
          \"createdAt\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",
          \"embed\": {
              \"\$type\": \"app.bsky.embed.external\",
                  \"external\": {
                      \"uri\": \"$blog_url\",
                      \"title\": \"$page_title\",
                      \"description\": \"\",
                      \"thumb\": {
                          \"\$type\": \"blob\",
                          \"ref\": {
                              \"\$link\": $blob_link
                          },
                          \"mimeType\": \"image/jpeg\",
                          \"size\": $blob_size } 
                      }
                  }
              } 
          }"
          curl -X POST \
              -H "Authorization: Bearer ${API_KEY}" \
              -H 'Content-Type: application/json' \
              -d "$POST_RECORD" \
              "$POST_FEED_URL" | jq -r
        done
